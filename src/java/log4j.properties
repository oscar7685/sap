#No poner logs dentro de if sino antes con el valor que se va a comparar,
#utilizar if(logger.isDebugEnabled())
#NO logear en ciclos
#no logear mensajes de excepcion, sino pasar el objeto excepcion al logger
#usar primero las constantes en las comparaciones para evitar los NullPointerException
#si necesitamos cadenas con concatenacion es mejor usar StringBuilder o StringBuffer
#no usar if(text!=null && text.equals("")) mejor if(text!=null && text.length()==0) o if(text.empty())
#usar Array[] en vez de arrayList si conocemos la longitud
#usar BigDecimal cuando se trata de plata o redondeo de cifras
#las constantes se escriben en mayusculas y se separan con _
#No realizar evaluaciones en bucles. Ej: for (int i=0; i<cadena.length();i++)
#evitar try - catch dentro de loop, mejor loop dentro de try
#usar List<String> list= new ArrayList<String>() en ves de List list= new ArrayList();
#usar el atributo final siempre que sea posible
#validar los argumentos de los metodos publicos para ver si vienen nulos o son incorrectos
#detectar espacios en blanco return "'" + String.valueOf(aObject) + "'";
#Hacer javadoc para todos los lugares que puedan causar una excepcion


# Root logger option
log4j.rootLogger=WARN, file, console
 
#Console Appender
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
 
#File Appender
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=sapLog.log
log4j.appender.file.MaxFileSize=30MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n